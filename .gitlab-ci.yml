stages:
  - build
  - deploy-dev
  - deploy-prod

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:20.10.16-dind

build-server:
  stage: build
  image: docker:25.0.5
  services:
    - docker:25.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -f server/Dockerfile -t $CI_REGISTRY_IMAGE/server:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE/server:latest .
    - docker push $CI_REGISTRY_IMAGE/server:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/server:latest
  only:
    - main
    - dev
    - feat/api-endpoint-system # TODO: remove

build-client:
  stage: build
  image: docker:25.0.5
  services:
    - docker:25.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -f client/Dockerfile -t $CI_REGISTRY_IMAGE/client:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE/client:latest .
    - docker push $CI_REGISTRY_IMAGE/client:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/client:latest
  only:
    - main
    - dev
    - feat/api-endpoint-system # TODO: remove

deploy-dev:
  stage: deploy-dev
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
    - curl https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz | tar -xzO linux-amd64/helm > /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl && mv kubectl /usr/local/bin/
    - echo "$KUBECONFIG_DEV" | base64 -d > ~/.kubeconfig
    - export KUBECONFIG=~/.kubeconfig
    - helm version
    - kubectl version --client
  script:
    - echo "Deploying to dev environment..."
    - helm upgrade --install clubhive-dev ./helm -f helm/values-dev.yaml --set image.tag=$CI_COMMIT_SHA --namespace clubhive-dev --create-namespace
  only:
    - dev

deploy-prod:
  stage: deploy-prod
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
    - curl https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz | tar -xzO linux-amd64/helm > /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl && mv kubectl /usr/local/bin/
    - echo "$KUBECONFIG_PROD" | base64 -d > ~/.kubeconfig
    - export KUBECONFIG=~/.kubeconfig
    - helm version
    - kubectl version --client
  script:
    - echo "Deploying to production environment..."
    - helm upgrade --install clubhive ./helm -f helm/values-prod.yaml --set image.tag=$CI_COMMIT_SHA --namespace clubhive --create-namespace
  only:
    - main
  when: manual